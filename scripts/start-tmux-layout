#!/usr/bin/env bash
set -euo pipefail

# Default session name to the basename of the current workdir if not provided
if [ -z "${TMUX_SESSION:-}" ]; then
  TMUX_SESSION="$(basename "${PWD}" 2>/dev/null || echo workspace)"
fi

export TERM="${TERM:-xterm-256color}"
export LANG="${LANG:-C.UTF-8}"
export TMUX_TMPDIR="${TMUX_TMPDIR:-/tmp}"

# Allow longer session name in tmux status bar (status-left)
STATUS_LEFT_LENGTH="${TMUX_STATUS_LEFT_LENGTH:-32}"
# Status-left content: show session name in yellow; most text uses default light gray
TMUX_STATUS_LEFT="${TMUX_STATUS_LEFT:-#[fg=yellow] #S #[fg=default]}"

# Style the tmux status line so the active tab/window is brighter
# You can override these via environment variables if desired.
TMUX_STATUS_STYLE="${TMUX_STATUS_STYLE:-bg=colour22,fg=colour250}"
TMUX_WINDOW_STATUS_STYLE="${TMUX_WINDOW_STATUS_STYLE:-bg=colour22,fg=colour250}"
TMUX_WINDOW_STATUS_CURRENT_STYLE="${TMUX_WINDOW_STATUS_CURRENT_STYLE:-bg=colour22,fg=colour120,bold}"

# Create the session if it does not exist
if ! tmux has-session -t "${TMUX_SESSION}" 2>/dev/null; then
  # First tab: codex (kept alive with exec bash -l)
  tmux new-session -d -s "${TMUX_SESSION}" -n codex \
    "/bin/bash" -lc "codex || true; exec bash -l" || {
      echo "[start-tmux-layout] Failed to create tmux session: ${TMUX_SESSION}" >&2
      exec /bin/bash -l
    }
  # Second tab: shell
  tmux new-window  -t "${TMUX_SESSION}:" -n shell "/bin/bash -l" || true
  # Third tab: shell
  tmux new-window  -t "${TMUX_SESSION}:" -n shell "/bin/bash -l" || true
  # Fourth tab: htop
  tmux new-window  -t "${TMUX_SESSION}:" -n htop  "htop" || true
  # Make Codex window active by default (select by name to avoid index issues)
  # (Selection will be done below after configuration.)
fi

# After ensuring a session exists, set up a single kill-all binding
(tmux unbind-key -T root Q >/dev/null 2>&1 || true)
(tmux bind-key -T root Q confirm-before -p "Kill ALL tmux sessions and exit container? (y/n)" kill-server >/dev/null 2>&1 || true)

# Apply configuration to the specific session (works whether it was created or pre-existing)
(tmux set-option -t "${TMUX_SESSION}" -q status-left-length "${STATUS_LEFT_LENGTH}" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q status-left "$TMUX_STATUS_LEFT" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q status-style "$TMUX_STATUS_STYLE" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-style "$TMUX_WINDOW_STATUS_STYLE" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-current-style "$TMUX_WINDOW_STATUS_CURRENT_STYLE" >/dev/null 2>&1 || true)
# Legacy per-session options for older tmux versions
(tmux set-option -t "${TMUX_SESSION}" -q status-bg "default" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q status-fg "colour250" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-bg "default" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-fg "colour250" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-attr "none" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-current-bg "default" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-current-fg "colour120" >/dev/null 2>&1 || true)
(tmux set-option -t "${TMUX_SESSION}" -q window-status-current-attr "bold" >/dev/null 2>&1 || true)

# Ensure Codex window is selected on attach
(tmux select-window -t "${TMUX_SESSION}:codex" >/dev/null 2>&1 || true)
# Try to attach; on failure, show diagnostics and fall back to a shell
if ! exec tmux attach -t "${TMUX_SESSION}"; then
  echo "[start-tmux-layout] tmux attach failed. Diagnostics:" >&2
  tmux list-sessions 2>&1 || true
  ps -ef | grep tmux | grep -v grep || true
  echo "TERM=$TERM LANG=$LANG TMUX=${TMUX-} TMUX_TMPDIR=${TMUX_TMPDIR-}" >&2
  exec /bin/bash -l
fi
